import jenkins.model.*
import com.cloudbees.plugins.credentials.*
import com.cloudbees.plugins.credentials.common.*
import com.cloudbees.plugins.credentials.domains.*
import com.cloudbees.plugins.credentials.impl.*
import com.cloudbees.jenkins.plugins.sshcredentials.impl.*
import hudson.plugins.sshslaves.*;

domain = Domain.global()
store = Jenkins.instance.getExtensionList('com.cloudbees.plugins.credentials.SystemCredentialsProvider')[0].getStore()

usernameAndPassword = new UsernamePasswordCredentialsImpl(
  CredentialsScope.GLOBAL,
  "openstack", "Openstack Credentials",
  "{{os_username}}",
  "{{os_password}}"
)

jenkinsslave = new UsernamePasswordCredentialsImpl(
  CredentialsScope.GLOBAL,
  "jenkins-slave", "Jenkins Slave Credentials",
  "jenkins",
  "jenkins"
)

ansibleKey = """
{{ lookup('file', 'files/cloud-user-'+project_environment+'.pem') }} 
"""

privateKey = new BasicSSHUserPrivateKey(
  CredentialsScope.GLOBAL,
  "ansible",
  "cloud-user",
  new BasicSSHUserPrivateKey.DirectEntryPrivateKeySource(ansibleKey),
  "",
  "Default Private key for ansible in {{project_environment}}"
)

store.addCredentials(domain, privateKey)

{% for jenkins_env in jenkins_managed_inventories | map('regex_replace', '-.*$', '') | unique %}
ansibleKey = """
{% set key_file = 'files/cloud-user-'+jenkins_env+'.pem' %}
{{ lookup('file', key_file) }} 
"""

privateKey = new BasicSSHUserPrivateKey(
  CredentialsScope.GLOBAL,
  "ansible-{{ jenkins_env }}",
  "cloud-user",
  new BasicSSHUserPrivateKey.DirectEntryPrivateKeySource(ansibleKey),
  "",
  "Private key for ansible in {{ jenkins_env }}"
)

store.addCredentials(domain, privateKey)

{% endfor %}

deployKey = """
{{ jenkins_github_key }}
"""

githubDeployKey = new BasicSSHUserPrivateKey(
  CredentialsScope.GLOBAL,
  "github-deploy-key-ansible",
  "jenkins@github",
  new BasicSSHUserPrivateKey.DirectEntryPrivateKeySource(deployKey),
  "",
  "GitHub deploy key for the ansible repo"
)

store.addCredentials(domain, usernameAndPassword)
store.addCredentials(domain, jenkinsslave)
store.addCredentials(domain, githubDeployKey)
