#---------------------------------------------------------------------
# Example configuration for a possible web application.  See the
# full configuration options online.
#
#   http://haproxy.1wt.eu/download/1.5/doc/configuration.txt
#
#---------------------------------------------------------------------

#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    # to have these messages end up in /var/log/haproxy.log you will
    # need to:
    #
    # 1) configure syslog to accept network log events.  This is done
    #    by adding the '-r' option to the SYSLOGD_OPTIONS in
    #    /etc/sysconfig/syslog
    #
    # 2) configure local2 events to go to the /var/log/haproxy.log
    #   file. A line like the following can be added to
    #   /etc/sysconfig/syslog
    #
    #    local2.*                       /var/log/haproxy.log
    #
    log         127.0.0.1 local2

    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

defaults
    log global
    retries 2
    timeout connect 3000
    timeout server 5000
    timeout client 5000
    # turn on stats unix socket
    #stats socket /var/lib/haproxy/stats level admin

listen mysql-writer-{{ mysql_proxy_writer_port }}
    bind *:{{ mysql_proxy_writer_port }}
    mode tcp
    balance leastconn
    option tcp-check
    tcp-check expect string Role:\ master
    option allbackups
    # inter: interval between checks when UP
    # downinter: interval between checks when DOWN
    # rise: number of successful checks before considered UP
    # fall: number of failed checks before considered DOWN
    default-server port 3{{ mysql_proxy_upstream_port }} inter 2s downinter 5s rise 3 fall 2 slowstart 60s maxconn 64 maxqueue 128 weight 100
{% for host in mysql_proxy_upstream_hosts %}
    server {{ host['human_id'] }} {{ host['private_v4'] }}:{{ mysql_proxy_upstream_port }} check
{% endfor %}

listen mysql-reader-{{ mysql_proxy_reader_port }}
    bind *:{{ mysql_proxy_reader_port }}
    mode tcp
    balance leastconn
    option tcp-check
    tcp-check expect string Role:
    option allbackups
    default-server port 3{{ mysql_proxy_upstream_port }} inter 2s downinter 5s rise 3 fall 2 slowstart 60s maxconn 64 maxqueue 128 weight 100
{% for host in mysql_proxy_upstream_hosts %}
    server {{ host['human_id'] }} {{ host['private_v4'] }}:{{ mysql_proxy_upstream_port }} check
{% endfor %}

listen stats :8080
    mode http
    stats enable
    stats uri /
    stats realm HAProxy\ Stats
    stats auth {{ mysql_proxy_stats_username }}:{{ mysql_proxy_stats_password }}
