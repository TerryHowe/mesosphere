moira_url: "https://monitor-{{ region }}.{{ admin_project }}.cloud.twc.net"

moira_project: "{{ alert_project | default(project) }}"
moira_region: "{{ alert_region | default(region) }}"

collectd_base_ns: "collectd.{{ moira_project }}.{{ moira_region }}"
collectd_admin_ns: "collectd.{{ admin_project }}.{{ moira_region }}"

basic_auth_username: "paas-devops"
basic_auth_password: "{{lookup('vault', 'moira', 'password')}}"
default_trigger_tag: "{{ (project_environment == 'dev') | ternary('disabled', project_environment) }}"

#-- Note: Moira makes a special version of movingAverage available
#-- You can specify a third argument, min or max, unlike the graphite function.
#-- That effectively gives you a movingMin or movingMax, respectively
moira_triggers:
  customer_marathon_uptime:
    name: "{{ mesos_project }}-{{ moira_region }} Customer Marathon Uptime"
    targets: [ "groupByNode(marathon.{{ mesos_project }}.{{ moira_region }}.*.service.mesosphere.marathon.uptime, 3, 'maxSeries')" ]
    expression: "ERROR if t1 < 300 else OK"
  customer_marathon_leader_duration:
    name: "{{ mesos_project }}-{{ moira_region }} Customer Marathon Leader Duration"
    targets: [ "groupByNode(marathon.{{ mesos_project }}.{{ moira_region }}.*.service.mesosphere.marathon.leaderDuration, 3, 'maxSeries')" ]
    expression: "ERROR if t1 < 300 else OK"
  marathon_service_uptime:
    name: "{{ moira_project }}-{{ moira_region }} Marathon Uptime"
    targets: [ "maxSeries(keepLastValue(marathon.{{ moira_project }}.{{ moira_region }}.mesos-master.*.service.mesosphere.marathon.uptime, 5))" ]
    expression: "ERROR if t1 < 300 else OK"
  marathon_leader_duration:
    name: "{{ moira_project }}-{{ moira_region }} Marathon Leader Duration"
    targets: [ "maxSeries(keepLastValue(marathon.{{ moira_project }}.{{ moira_region }}.mesos-master.*.service.mesosphere.marathon.leaderDuration, 5))" ]
    expression: "ERROR if t1 < 300 else OK"
  mesos_agent_process_running:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Agent Process Running"
    targets: [ "movingAverage({{ collectd_base_ns }}.mesos-agent.*.processes.mesos-agent.ps_count.processes, '5min', 'max')" ]
    expression: "ERROR if t1 < 1 else OK"
  mesos_agent_registered:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Agent Process Registered"
    targets: [ "movingAverage({{ collectd_base_ns }}.mesos-agent.*.mesos-slave.gauge.slave_registered, '5min', 'max')" ]
    expression: "ERROR if t1 < 1 else OK"
  mesos_agent_node_load:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Agent Node Load"
    targets: [ "averageSeries(keepLastValue({{ collectd_base_ns }}.mesos-agent.*.load.load.relative.shortterm, 5))" ]
    expression: "ERROR if t1 > 0.85 else OK"
  mesos_agent_node_disk_space_data:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Agent Disk Space (/data)"
    targets: [ "{{ collectd_base_ns }}.mesos-agent.*.df.data.percent_bytes.used" ]
    expression: "ERROR if t1 > 90.0 else OK"
  mesos_agent_node_disk_space_root:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Agent Disk Space (root)"
    targets: [ "{{ collectd_base_ns }}.mesos-agent.*.df.root.percent_bytes.used" ]
    expression: "ERROR if t1 > 90.0 else OK"
  mesos_master_process_running:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Master Process Running"
    targets: [ "movingAverage({{ collectd_base_ns }}.mesos-master.*.processes.mesos-master.ps_count.processes, '5min', 'max')" ]
    expression: "ERROR if t1 < 1 else OK"
  mesos_master_no_leader_elected:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Master Leader Elected"
    targets: [ "maxSeries(keepLastValue({{ collectd_base_ns }}.mesos-master.*.mesos-master.gauge.master_elected, 5))" ]
    expression: "ERROR if t1 < 1 else OK"
  mesos_master_load:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Master Load"
    targets: [ "{{ collectd_base_ns }}.mesos-master.*.load.load.relative.shortterm" ]
    expression: "ERROR if t1 > 0.95 else OK"
  mesos_master_uptime:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Master Uptime"
    targets: [ "maxSeries(keepLastValue({{ collectd_base_ns }}.mesos-master.*.mesos-master.gauge.master_uptime_secs, 5))" ]
    expression: "ERROR if t1 < 300 else OK"
  mesos_master_tasks_lost:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Master Tasks Lost"
    targets: [ "perSecond(maxSeries(keepLastValue({{ collectd_base_ns }}.mesos-master.*.mesos-master.counter.master_tasks_lost, 5)))" ]
    expression: "ERROR if t1 > 0.1 else OK"
  mesos_master_tasks_failed:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Master Tasks Failed"
    targets: [ "perSecond(maxSeries(keepLastValue({{ collectd_base_ns }}.mesos-master.*.mesos-master.counter.master_tasks_failed, 5)))" ]
    expression: "ERROR if t1 > 1.0 else OK"
  mesos_master_tasks_error:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Master Tasks Error"
    targets: [ "perSecond(maxSeries(keepLastValue({{ collectd_base_ns }}.mesos-master.*.mesos-master.counter.master_tasks_error, 5)))" ]
    expression: "ERROR if t1 > 0.1 else OK"
  mesos_master_marathon_process_running:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Master Marathon Process Running"
    targets: [ "movingAverage({{ collectd_base_ns }}.mesos-master.*.processes.mesos-marathon.ps_count.processes, '5min', 'max')" ]
    expression: "ERROR if t1 < 1 else OK"
  mesos_master_disk_space_root:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Master Disk Space (root)"
    targets: [ "{{ collectd_base_ns }}.mesos-master.*.df.root.percent_bytes.used" ]
    expression: "ERROR if t1 > 90.0 else OK"
  mesos_master_num_agents_connected:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Master Number of Agents Connected"
    targets: [ "minSeries({{ collectd_base_ns }}.mesos-master.*.mesos-master.gauge.master_slaves_connected)" ]
    expression: "ERROR if t1 < {{ groups['mesos-agent'] | length -2 }} else OK"
  mesos_master_no_masters_running:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Masters Running"
    targets: [ "sumSeries(keepLastValue({{ collectd_base_ns }}.mesos-master.*.processes.mesos-master.ps_count.processes, 5))" ]
    expression: "ERROR if t1 < 1 else OK"
  mesos_master_no_quorum:
    name: "{{ moira_project }}-{{ moira_region }} Mesos Masters Quorum"
    targets: [ "movingAverage(sumSeries(keepLastValue({{ collectd_base_ns }}.mesos-master.*.processes.mesos-master.ps_count.processes, 5)), '5min', 'max')" ]
    expression: "ERROR if t1 < {{ (((groups['mesos-master'] | length) / 2) | round | int) + 1 }} else OK"
  admin_graphite_disk_space:
    name: "{{ admin_project }}-{{ moira_region }} Carbon Cache Disk Space (/var/lib/carbon)"
    targets: [ "{{ collectd_admin_ns }}.carbon-cache.*.df.var-lib-carbon.percent_bytes.used" ]
    expression: "ERROR if t1 > 90.0 else OK"
